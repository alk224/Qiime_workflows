Logging started at 18:22:37 on 02 Jan 2015
QIIME version: 1.8.0

qiime_config values:
blastmat_dir	/home/enggen/qiime_software/blast-2.2.22-release/data
sc_queue	all.q
pynast_template_alignment_fp	/home/enggen/qiime_software/core_set_aligned.fasta.imputed
cluster_jobs_fp	start_parallel_jobs.py
assign_taxonomy_reference_seqs_fp	/home/enggen/qiime_software/gg_otus-13_8-release/rep_set/97_otus.fasta
torque_queue	friendlyq
template_alignment_lanemask_fp	/home/enggen/qiime_software/lanemask_in_1s_and_0s
jobs_to_start	1
cloud_environment	False
denoiser_min_per_core	50
python_exe_fp	python
temp_dir	/tmp/
blastall_fp	/home/enggen/qiime_software/blast-2.2.22-release/bin/blastall
seconds_to_sleep	60
assign_taxonomy_id_to_taxonomy_fp	/home/enggen/qiime_software/gg_otus-13_8-release/taxonomy/97_otu_taxonomy.txt

parameter file values:
beta_diversity:metrics	abund_jaccard,binary_jaccard,bray_curtis,unweighted_unifrac,weighted_unifrac,binary_chord,chord,hellinger,kulczynski
plot_taxa_summary:include_html_counts	True
summarize_taxa:absolute_abundance	True
summarize_taxa:level	2,3,4,5,6,7
parallel:jobs_to_start	10

Input file md5 sums:
open_reference_output/filtered_otu_tables/1percent_otu_table.biom: 455e630b01438359765a765ac12ccdff
map.ITS.mock.csv: 0c644cf52e5a7f5b47e7d47a144e5f5d
open_reference_output/mafft_aligned_seqs/fasttree_phylogeny.tre: e6737181ca3454f426216c673b9011a9

Executing commands.

# Generate BIOM table summary command 
biom summarize-table -i open_reference_output/filtered_otu_tables/1percent_otu_table.biom -o core_diversity_output//1percent_otu_table/biom_table_summary.txt --suppress-md5 

Stdout:

Stderr:

# Filter low sequence count samples from table (minimum sequence count: 250) command 
filter_samples_from_otu_table.py -i open_reference_output/filtered_otu_tables/1percent_otu_table.biom -o core_diversity_output//1percent_otu_table/table_mc250.biom -n 250

Stdout:

Stderr:

# Rarify the OTU table to 250 sequences/sample command 
single_rarefaction.py -i core_diversity_output//1percent_otu_table/table_mc250.biom -o core_diversity_output//1percent_otu_table/table_even250.biom -d 250

Stdout:

Stderr:

Executing commands.

# Beta Diversity (abund_jaccard) command 
python /usr/local/lib/python2.7/dist-packages/scripts/parallel_beta_diversity.py -i core_diversity_output//1percent_otu_table/table_even250.biom -o core_diversity_output//1percent_otu_table/bdiv_even250/ --metrics abund_jaccard -T  -t open_reference_output/mafft_aligned_seqs/fasttree_phylogeny.tre --jobs_to_start 10

Stdout:

Stderr:

# Rename distance matrix (abund_jaccard) command 
mv core_diversity_output//1percent_otu_table/bdiv_even250//abund_jaccard_table_even250.txt core_diversity_output//1percent_otu_table/bdiv_even250//abund_jaccard_dm.txt

Stdout:

Stderr:

# Principal coordinates (abund_jaccard) command 
python /usr/local/lib/python2.7/dist-packages/scripts/principal_coordinates.py -i core_diversity_output//1percent_otu_table/bdiv_even250//abund_jaccard_dm.txt -o core_diversity_output//1percent_otu_table/bdiv_even250//abund_jaccard_pc.txt 

Stdout:

Stderr:

# Make emperor plots, abund_jaccard) command 
make_emperor.py -i core_diversity_output//1percent_otu_table/bdiv_even250//abund_jaccard_pc.txt -o core_diversity_output//1percent_otu_table/bdiv_even250//abund_jaccard_emperor_pcoa_plot/ -m map.ITS.mock.csv 

Stdout:

Stderr:

# Beta Diversity (binary_jaccard) command 
python /usr/local/lib/python2.7/dist-packages/scripts/parallel_beta_diversity.py -i core_diversity_output//1percent_otu_table/table_even250.biom -o core_diversity_output//1percent_otu_table/bdiv_even250/ --metrics binary_jaccard -T  -t open_reference_output/mafft_aligned_seqs/fasttree_phylogeny.tre --jobs_to_start 10

Stdout:

Stderr:

# Rename distance matrix (binary_jaccard) command 
mv core_diversity_output//1percent_otu_table/bdiv_even250//binary_jaccard_table_even250.txt core_diversity_output//1percent_otu_table/bdiv_even250//binary_jaccard_dm.txt

Stdout:

Stderr:

# Principal coordinates (binary_jaccard) command 
python /usr/local/lib/python2.7/dist-packages/scripts/principal_coordinates.py -i core_diversity_output//1percent_otu_table/bdiv_even250//binary_jaccard_dm.txt -o core_diversity_output//1percent_otu_table/bdiv_even250//binary_jaccard_pc.txt 

Stdout:

Stderr:

# Make emperor plots, binary_jaccard) command 
make_emperor.py -i core_diversity_output//1percent_otu_table/bdiv_even250//binary_jaccard_pc.txt -o core_diversity_output//1percent_otu_table/bdiv_even250//binary_jaccard_emperor_pcoa_plot/ -m map.ITS.mock.csv 

Stdout:

Stderr:

# Beta Diversity (bray_curtis) command 
python /usr/local/lib/python2.7/dist-packages/scripts/parallel_beta_diversity.py -i core_diversity_output//1percent_otu_table/table_even250.biom -o core_diversity_output//1percent_otu_table/bdiv_even250/ --metrics bray_curtis -T  -t open_reference_output/mafft_aligned_seqs/fasttree_phylogeny.tre --jobs_to_start 10

Stdout:

Stderr:

# Rename distance matrix (bray_curtis) command 
mv core_diversity_output//1percent_otu_table/bdiv_even250//bray_curtis_table_even250.txt core_diversity_output//1percent_otu_table/bdiv_even250//bray_curtis_dm.txt

Stdout:

Stderr:

# Principal coordinates (bray_curtis) command 
python /usr/local/lib/python2.7/dist-packages/scripts/principal_coordinates.py -i core_diversity_output//1percent_otu_table/bdiv_even250//bray_curtis_dm.txt -o core_diversity_output//1percent_otu_table/bdiv_even250//bray_curtis_pc.txt 

Stdout:

Stderr:

# Make emperor plots, bray_curtis) command 
make_emperor.py -i core_diversity_output//1percent_otu_table/bdiv_even250//bray_curtis_pc.txt -o core_diversity_output//1percent_otu_table/bdiv_even250//bray_curtis_emperor_pcoa_plot/ -m map.ITS.mock.csv 

Stdout:

Stderr:

# Beta Diversity (unweighted_unifrac) command 
python /usr/local/lib/python2.7/dist-packages/scripts/parallel_beta_diversity.py -i core_diversity_output//1percent_otu_table/table_even250.biom -o core_diversity_output//1percent_otu_table/bdiv_even250/ --metrics unweighted_unifrac -T  -t open_reference_output/mafft_aligned_seqs/fasttree_phylogeny.tre --jobs_to_start 10

Stdout:

Stderr:

# Rename distance matrix (unweighted_unifrac) command 
mv core_diversity_output//1percent_otu_table/bdiv_even250//unweighted_unifrac_table_even250.txt core_diversity_output//1percent_otu_table/bdiv_even250//unweighted_unifrac_dm.txt

Stdout:

Stderr:

# Principal coordinates (unweighted_unifrac) command 
python /usr/local/lib/python2.7/dist-packages/scripts/principal_coordinates.py -i core_diversity_output//1percent_otu_table/bdiv_even250//unweighted_unifrac_dm.txt -o core_diversity_output//1percent_otu_table/bdiv_even250//unweighted_unifrac_pc.txt 

Stdout:

Stderr:

# Make emperor plots, unweighted_unifrac) command 
make_emperor.py -i core_diversity_output//1percent_otu_table/bdiv_even250//unweighted_unifrac_pc.txt -o core_diversity_output//1percent_otu_table/bdiv_even250//unweighted_unifrac_emperor_pcoa_plot/ -m map.ITS.mock.csv 



*** ERROR RAISED DURING STEP: Make emperor plots, unweighted_unifrac)
Command run was:
 make_emperor.py -i core_diversity_output//1percent_otu_table/bdiv_even250//unweighted_unifrac_pc.txt -o core_diversity_output//1percent_otu_table/bdiv_even250//unweighted_unifrac_emperor_pcoa_plot/ -m map.ITS.mock.csv 
Command returned exit status: 2
Stdout:

Stderr
Usage: make_emperor.py [options] {-i/--input_coords INPUT_COORDS -m/--map_fp MAP_FP}

[] indicates optional input (order unimportant)
{} indicates required input (order unimportant)

This script automates the creation  of three-dimensional PCoA plots to be visualized with Emperor using Google Chrome.

Example usage: 
Print help message and exit
 make_emperor.py -h

Plot PCoA data: Visualize the a PCoA file colored using a corresponding mapping file:
 make_emperor.py -i unweighted_unifrac_pc.txt -m Fasting_Map.txt -o emperor_output

Coloring by metadata mapping file: Additionally, using the supplied mapping file and a specific category or any combination of the available categories. When using the -b option, the user can specify the coloring for multiple header names, where each header is separated by a comma. The user can also combine mapping headers and color by the combined headers that are created by inserting an '&&' between the input header names. Color by 'Treatment' and by the result of concatenating the 'DOB' category and the 'Treatment' category:
 make_emperor.py -i unweighted_unifrac_pc.txt -m Fasting_Map.txt -b 'Treatment&&DOB,Treatment' -o emperor_colored_by

PCoA plot with an explicit axis: Create a PCoA plot with an axis of the plot representing the 'DOB' of the samples. This option is useful when presenting a gradient from your metadata e. g. 'Time' or 'pH':
 make_emperor.py -i unweighted_unifrac_pc.txt -m Fasting_Map.txt -a DOB -o pcoa_dob

PCoA plot with an explicit axis and using --missing_custom_axes_values: Create a PCoA plot with an axis of the plot representing the 'DOB' of the samples and define the position over the gradient of those samples missing a numeric value; in this case we are going to plot the samples in the value 20060000. You can select for each explicit axis which value you want to use for the missing values:
 make_emperor.py -i unweighted_unifrac_pc.txt -m Fasting_Map_modified.txt -a DOB -o pcoa_dob_with_missing_custom_axes_values -x 'DOB:20060000'

PCoA plot with an explicit axis and using --missing_custom_axes_values but setting different values based on another column: Create a PCoA plot with an axis of the plot representing the 'DOB' of the samples and defining the position over the gradient of those samples missing a numeric value but using as reference another column of the mapping file. In this case we are going to plot the samples that are Control on the Treatment column on 20080220 and on 20080240 those that are Fast
 make_emperor.py -i unweighted_unifrac_pc.txt -m Fasting_Map_modified.txt -a DOB -o pcoa_dob_with_missing_custom_axes_with_multiple_values -x 'DOB:Treatment==Control=20080220' -x 'DOB:Treatment==Fast=20080240'

Jackknifed principal coordinates analysis plot: Create a jackknifed PCoA plot (with confidence intervals for each sample) passing as the input a directory of coordinates files (where each file corresponds to a different OTU table) and use the standard deviation method to compute the dimensions of the ellipsoids surrounding each sample:
 make_emperor.py -i unweighted_unifrac_pc -m Fasting_Map.txt -o jackknifed_pcoa -e sdev

Jackknifed PCoA plot with a master coordinates file: Passing a master coordinates file (--master_pcoa) will display the ellipsoids centered by the samples in this file:
 make_emperor.py -i unweighted_unifrac_pc -s unweighted_unifrac_pc/pcoa_unweighted_unifrac_rarefaction_110_5.txt -m Fasting_Map.txt -o jackknifed_with_master

BiPlots: To see which taxa are the ten more prevalent in the different areas of the PCoA plot, you need to pass a summarized taxa file i. e. the output of summarize_taxa.py. Note that if the the '--taxa_fp' has fewer than 10 taxa, the script will default to use all.
 make_emperor.py -i unweighted_unifrac_pc.txt -m Fasting_Map.txt -t otu_table_L3.txt -o biplot

BiPlots with extra options: To see which are the three most prevalent taxa and save the coordinates where these taxa are centered, you can use the -n (number of taxa to keep) and the --biplot_fp (output biplot file path) options.
 make_emperor.py -i unweighted_unifrac_pc.txt -m Fasting_Map.txt -t otu_table_L3.txt -o biplot_options -n 3 --biplot_fp biplot.txt

Drawing connecting lines between samples: To draw lines betwen samples within a category use the '--add_vectors' option. For example to connect the lines by the 'Treatment' category.
 make_emperor.py -i unweighted_unifrac_pc.txt -m Fasting_Map.txt -o vectors --add_vectors Treatment

Drawing connecting lines between samples with an explicit axis: To draw lines between samples within a category of the mapping file and have them sorted by a category that's explicitly represented in the 3D plot use the '--add_vectors' and the '-a' option.
 make_emperor.py -i unweighted_unifrac_pc.txt -m Fasting_Map.txt --add_vectors Treatment,DOB -a DOB -o sorted_by_DOB

Compare two coordinate files: To draw replicates of the same samples like for a procustes plot.
 make_emperor.py -i compare -m Fasting_Map.txt --compare_plots -o comparison

make_emperor.py: error: Due to the variation explained, Emperor could not plot at least 3 axes, check the input files to ensure that the percent explained is greater than 0.5 in at least three axes.


Logging stopped at 18:22:44 on 02 Jan 2015
